// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: vxhLNdYPiZkVHCUwHukgLS
// Component: HEzhWpoasdTp
import * as React from "react";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import CtaButtonHomePage from "../../CtaButtonHomePage"; // plasmic-import: v_1uoljXHS/component

import { useScreenVariants as useScreenVariantsbsAoCHpNAwrkE } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: BSAoCHpNAwrkE/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_lincd_home.module.css"; // plasmic-import: vxhLNdYPiZkVHCUwHukgLS/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: HEzhWpoasdTp/css

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  home?: p.Flex<"div">;
  frame141?: p.Flex<"div">;
  frame140?: p.Flex<"div">;
  frame96?: p.Flex<"div">;
  heading?: p.Flex<"div">;
  title?: p.Flex<"div">;
  description?: p.Flex<"div">;
  frame179?: p.Flex<"div">;
  frame138?: p.Flex<"div">;
  frame137?: p.Flex<"div">;
  sectionTitle?: p.Flex<"div">;
  sectionDescription?: p.Flex<"div">;
  screenShot20220131At2561?: p.Flex<"div">;
  frame127?: p.Flex<"div">;
  frame126?: p.Flex<"div">;
  frame169?: p.Flex<"div">;
  sectionTitle2?: p.Flex<"div">;
  rectangle79?: p.Flex<"div">;
  sectionDescription2?: p.Flex<"div">;
  group151?: p.Flex<"div">;
  frame178?: p.Flex<"div">;
  frame180?: p.Flex<"div">;
  frame166?: p.Flex<"div">;
  _?: p.Flex<"div">;
  _2?: p.Flex<"div">;
  frame177?: p.Flex<"div">;
  frame167?: p.Flex<"div">;
  sectionDescription3?: p.Flex<"div">;
  frame176?: p.Flex<"div">;
  frame173?: p.Flex<"div">;
  sectionDescription4?: p.Flex<"div">;
  frame181?: p.Flex<"div">;
  frame182?: p.Flex<"div">;
  frame168?: p.Flex<"div">;
  _3?: p.Flex<"div">;
  _4?: p.Flex<"div">;
  frame183?: p.Flex<"div">;
  frame170?: p.Flex<"div">;
  sectionDescription5?: p.Flex<"div">;
  frame184?: p.Flex<"div">;
  frame174?: p.Flex<"div">;
  sectionDescription6?: p.Flex<"div">;
  frame185?: p.Flex<"div">;
  frame186?: p.Flex<"div">;
  frame171?: p.Flex<"div">;
  _5?: p.Flex<"div">;
  _6?: p.Flex<"div">;
  frame187?: p.Flex<"div">;
  frame172?: p.Flex<"div">;
  sectionDescription7?: p.Flex<"div">;
  frame188?: p.Flex<"div">;
  frame175?: p.Flex<"div">;
  sectionDescription8?: p.Flex<"div">;
  frame189?: p.Flex<"div">;
  frame190?: p.Flex<"div">;
  frame191?: p.Flex<"div">;
  _7?: p.Flex<"div">;
  _8?: p.Flex<"div">;
  frame192?: p.Flex<"div">;
  frame193?: p.Flex<"div">;
  sectionDescription9?: p.Flex<"div">;
  frame194?: p.Flex<"div">;
  frame195?: p.Flex<"div">;
  sectionDescription10?: p.Flex<"div">;
  frame196?: p.Flex<"div">;
  frame197?: p.Flex<"div">;
  frame198?: p.Flex<"div">;
  _9?: p.Flex<"div">;
  _10?: p.Flex<"div">;
  frame199?: p.Flex<"div">;
  frame200?: p.Flex<"div">;
  sectionDescription11?: p.Flex<"div">;
  frame201?: p.Flex<"div">;
  frame202?: p.Flex<"div">;
  sectionDescription12?: p.Flex<"div">;
  frame203?: p.Flex<"div">;
  frame204?: p.Flex<"div">;
  frame205?: p.Flex<"div">;
  _11?: p.Flex<"div">;
  _12?: p.Flex<"div">;
  frame206?: p.Flex<"div">;
  frame207?: p.Flex<"div">;
  sectionDescription13?: p.Flex<"div">;
  frame208?: p.Flex<"div">;
  frame209?: p.Flex<"div">;
  sectionDescription14?: p.Flex<"div">;
  frame151?: p.Flex<"div">;
  frame153?: p.Flex<"div">;
  rectangle78?: p.Flex<"div">;
  frame149?: p.Flex<"div">;
  frame147?: p.Flex<"div">;
  tag?: p.Flex<"div">;
  largeTagBase?: p.Flex<"div">;
  tag2?: p.Flex<"div">;
  largeTagBase2?: p.Flex<"div">;
  tag3?: p.Flex<"div">;
  largeTagBase3?: p.Flex<"div">;
  frame152?: p.Flex<"div">;
  rectangle80?: p.Flex<"div">;
  frame154?: p.Flex<"div">;
  frame148?: p.Flex<"div">;
  tag4?: p.Flex<"div">;
  largeTagBase4?: p.Flex<"div">;
  tag5?: p.Flex<"div">;
  largeTagBase5?: p.Flex<"div">;
  tag6?: p.Flex<"div">;
  largeTagBase6?: p.Flex<"div">;
  frame155?: p.Flex<"div">;
  rectangle81?: p.Flex<"div">;
  frame150?: p.Flex<"div">;
  frame156?: p.Flex<"div">;
  tag7?: p.Flex<"div">;
  largeTagBase7?: p.Flex<"div">;
  tag8?: p.Flex<"div">;
  largeTagBase8?: p.Flex<"div">;
  tag9?: p.Flex<"div">;
  largeTagBase9?: p.Flex<"div">;
  frame157?: p.Flex<"div">;
  rectangle82?: p.Flex<"div">;
  frame210?: p.Flex<"div">;
  sectionTitle3?: p.Flex<"div">;
  image50?: p.Flex<"div">;
  frame99?: p.Flex<"div">;
  frame97?: p.Flex<"div">;
  sectionTitle4?: p.Flex<"div">;
  sectionDescription15?: p.Flex<"div">;
  frame128?: p.Flex<"div">;
  image52?: p.Flex<"div">;
  frame129?: p.Flex<"div">;
  sectionTitle5?: p.Flex<"div">;
  sectionDescription16?: p.Flex<"div">;
  frame125?: p.Flex<"div">;
  featureInfo?: p.Flex<"div">;
  sectionTitle6?: p.Flex<"div">;
  sectionDescription17?: p.Flex<"div">;
  image22?: p.Flex<"div">;
  frame130?: p.Flex<"div">;
  image51?: p.Flex<"div">;
  frame131?: p.Flex<"div">;
  sectionTitle7?: p.Flex<"div">;
  sectionDescription18?: p.Flex<"div">;
  frame132?: p.Flex<"div">;
  frame145?: p.Flex<"div">;
  sectionTitle8?: p.Flex<"div">;
  image34?: p.Flex<"div">;
  sectionTitle10?: p.Flex<"div">;
  sectionDescription19?: p.Flex<"div">;
  link?: p.Flex<"a">;
};

export interface DefaultHomepageProps {
  className?: string;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsbsAoCHpNAwrkE()
  });

  return (
    <React.Fragment>
      {}
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"home"}
            data-plasmic-override={overrides.home}
            hasGap={true}
            className={classNames(projectcss.all, sty.home)}
          >
            <div
              data-plasmic-name={"frame141"}
              data-plasmic-override={overrides.frame141}
              className={classNames(projectcss.all, sty.frame141)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame140"}
                data-plasmic-override={overrides.frame140}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame140)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___0Eqia
                  )}
                >
                  {"LINCD"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame96"}
                data-plasmic-override={overrides.frame96}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame96)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"heading"}
                  data-plasmic-override={overrides.heading}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.heading)}
                >
                  <div
                    data-plasmic-name={"title"}
                    data-plasmic-override={overrides.title}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.title
                    )}
                  >
                    {"A New Era of Interoperability"}
                  </div>

                  <div
                    data-plasmic-name={"description"}
                    data-plasmic-override={overrides.description}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.description
                    )}
                  >
                    {
                      "Introducing LINCD - Linked Interoperable Code & Data. Employ the best data practices, speed up your development and align with web 3.0"
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame179"}
                  data-plasmic-override={overrides.frame179}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame179)}
                >
                  <CtaButtonHomePage
                    className={classNames(
                      "__wab_instance",
                      sty.ctaButtonHomePage__gtcgI
                    )}
                  />
                </p.Stack>
              </p.Stack>
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame138"}
              data-plasmic-override={overrides.frame138}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame138)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame137"}
                data-plasmic-override={overrides.frame137}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame137)}
              >
                <div
                  data-plasmic-name={"sectionTitle"}
                  data-plasmic-override={overrides.sectionTitle}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.sectionTitle
                  )}
                >
                  {"A new standard of reusability"}
                </div>

                <div
                  data-plasmic-name={"sectionDescription"}
                  data-plasmic-override={overrides.sectionDescription}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.sectionDescription
                  )}
                >
                  {
                    "With LINCD, you can easily create and share code modules across different environments using W3C’s Linked Data standards. "
                  }
                </div>
              </p.Stack>

              <div
                data-plasmic-name={"screenShot20220131At2561"}
                data-plasmic-override={overrides.screenShot20220131At2561}
                className={classNames(
                  projectcss.all,
                  sty.screenShot20220131At2561
                )}
              />
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame127"}
              data-plasmic-override={overrides.frame127}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame127)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame126"}
                data-plasmic-override={overrides.frame126}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame126)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame169"}
                  data-plasmic-override={overrides.frame169}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame169)}
                >
                  <div
                    data-plasmic-name={"sectionTitle2"}
                    data-plasmic-override={overrides.sectionTitle2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.sectionTitle2
                    )}
                  >
                    {"LINCD Library"}
                  </div>

                  <div
                    data-plasmic-name={"rectangle79"}
                    data-plasmic-override={overrides.rectangle79}
                    className={classNames(projectcss.all, sty.rectangle79)}
                  />

                  <div
                    data-plasmic-name={"sectionDescription2"}
                    data-plasmic-override={overrides.sectionDescription2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.sectionDescription2
                    )}
                  >
                    {
                      "LINCD is a lightweight Javascript library that helps you to integrate data from different sources into one graph.\nand build visualizations with ease"
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"group151"}
                  data-plasmic-override={overrides.group151}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.group151)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame178"}
                    data-plasmic-override={overrides.frame178}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame178)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame180"}
                      data-plasmic-override={overrides.frame180}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame180)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame166"}
                        data-plasmic-override={overrides.frame166}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame166)}
                      >
                        <div
                          data-plasmic-name={"_"}
                          data-plasmic-override={overrides._}
                          className={classNames(projectcss.all, sty._)}
                        >
                          <div
                            data-plasmic-name={"_2"}
                            data-plasmic-override={overrides._2}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty._2
                            )}
                          >
                            {"✅ "}
                          </div>
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame177"}
                      data-plasmic-override={overrides.frame177}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame177)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame167"}
                        data-plasmic-override={overrides.frame167}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame167)}
                      >
                        <div
                          data-plasmic-name={"sectionDescription3"}
                          data-plasmic-override={overrides.sectionDescription3}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.sectionDescription3
                          )}
                        >
                          {"Convert"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame176"}
                      data-plasmic-override={overrides.frame176}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame176)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame173"}
                        data-plasmic-override={overrides.frame173}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame173)}
                      >
                        <div
                          data-plasmic-name={"sectionDescription4"}
                          data-plasmic-override={overrides.sectionDescription4}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.sectionDescription4
                          )}
                        >
                          {"Import & convert your data to Linked Data"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame181"}
                    data-plasmic-override={overrides.frame181}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame181)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame182"}
                      data-plasmic-override={overrides.frame182}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame182)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame168"}
                        data-plasmic-override={overrides.frame168}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame168)}
                      >
                        <div
                          data-plasmic-name={"_3"}
                          data-plasmic-override={overrides._3}
                          className={classNames(projectcss.all, sty._3)}
                        >
                          <div
                            data-plasmic-name={"_4"}
                            data-plasmic-override={overrides._4}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty._4
                            )}
                          >
                            {"✅ "}
                          </div>
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame183"}
                      data-plasmic-override={overrides.frame183}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame183)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame170"}
                        data-plasmic-override={overrides.frame170}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame170)}
                      >
                        <div
                          data-plasmic-name={"sectionDescription5"}
                          data-plasmic-override={overrides.sectionDescription5}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.sectionDescription5
                          )}
                        >
                          {"Connect "}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame184"}
                      data-plasmic-override={overrides.frame184}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame184)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame174"}
                        data-plasmic-override={overrides.frame174}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame174)}
                      >
                        <div
                          data-plasmic-name={"sectionDescription6"}
                          data-plasmic-override={overrides.sectionDescription6}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.sectionDescription6
                          )}
                        >
                          {"Databases and API’s as data sources"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame185"}
                    data-plasmic-override={overrides.frame185}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame185)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame186"}
                      data-plasmic-override={overrides.frame186}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame186)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame171"}
                        data-plasmic-override={overrides.frame171}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame171)}
                      >
                        <div
                          data-plasmic-name={"_5"}
                          data-plasmic-override={overrides._5}
                          className={classNames(projectcss.all, sty._5)}
                        >
                          <div
                            data-plasmic-name={"_6"}
                            data-plasmic-override={overrides._6}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty._6
                            )}
                          >
                            {"✅ "}
                          </div>
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame187"}
                      data-plasmic-override={overrides.frame187}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame187)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame172"}
                        data-plasmic-override={overrides.frame172}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame172)}
                      >
                        <div
                          data-plasmic-name={"sectionDescription7"}
                          data-plasmic-override={overrides.sectionDescription7}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.sectionDescription7
                          )}
                        >
                          {"One graph"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame188"}
                      data-plasmic-override={overrides.frame188}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame188)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame175"}
                        data-plasmic-override={overrides.frame175}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame175)}
                      >
                        <div
                          data-plasmic-name={"sectionDescription8"}
                          data-plasmic-override={overrides.sectionDescription8}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.sectionDescription8
                          )}
                        >
                          {
                            "In memory graph database with accessible resource-centric API "
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame189"}
                    data-plasmic-override={overrides.frame189}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame189)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame190"}
                      data-plasmic-override={overrides.frame190}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame190)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame191"}
                        data-plasmic-override={overrides.frame191}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame191)}
                      >
                        <div
                          data-plasmic-name={"_7"}
                          data-plasmic-override={overrides._7}
                          className={classNames(projectcss.all, sty._7)}
                        >
                          <div
                            data-plasmic-name={"_8"}
                            data-plasmic-override={overrides._8}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty._8
                            )}
                          >
                            {"✅ "}
                          </div>
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame192"}
                      data-plasmic-override={overrides.frame192}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame192)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame193"}
                        data-plasmic-override={overrides.frame193}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame193)}
                      >
                        <div
                          data-plasmic-name={"sectionDescription9"}
                          data-plasmic-override={overrides.sectionDescription9}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.sectionDescription9
                          )}
                        >
                          {"Apply"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame194"}
                      data-plasmic-override={overrides.frame194}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame194)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame195"}
                        data-plasmic-override={overrides.frame195}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame195)}
                      >
                        <div
                          data-plasmic-name={"sectionDescription10"}
                          data-plasmic-override={overrides.sectionDescription10}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.sectionDescription10
                          )}
                        >
                          {"Matching UI components and algorithms with ease"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame196"}
                    data-plasmic-override={overrides.frame196}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame196)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame197"}
                      data-plasmic-override={overrides.frame197}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame197)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame198"}
                        data-plasmic-override={overrides.frame198}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame198)}
                      >
                        <div
                          data-plasmic-name={"_9"}
                          data-plasmic-override={overrides._9}
                          className={classNames(projectcss.all, sty._9)}
                        >
                          <div
                            data-plasmic-name={"_10"}
                            data-plasmic-override={overrides._10}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty._10
                            )}
                          >
                            {"✅ "}
                          </div>
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame199"}
                      data-plasmic-override={overrides.frame199}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame199)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame200"}
                        data-plasmic-override={overrides.frame200}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame200)}
                      >
                        <div
                          data-plasmic-name={"sectionDescription11"}
                          data-plasmic-override={overrides.sectionDescription11}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.sectionDescription11
                          )}
                        >
                          {"Update"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame201"}
                      data-plasmic-override={overrides.frame201}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame201)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame202"}
                        data-plasmic-override={overrides.frame202}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame202)}
                      >
                        <div
                          data-plasmic-name={"sectionDescription12"}
                          data-plasmic-override={overrides.sectionDescription12}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.sectionDescription12
                          )}
                        >
                          {
                            "When the graph changes, your components will automatically update "
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame203"}
                    data-plasmic-override={overrides.frame203}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame203)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame204"}
                      data-plasmic-override={overrides.frame204}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame204)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame205"}
                        data-plasmic-override={overrides.frame205}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame205)}
                      >
                        <div
                          data-plasmic-name={"_11"}
                          data-plasmic-override={overrides._11}
                          className={classNames(projectcss.all, sty._11)}
                        >
                          <div
                            data-plasmic-name={"_12"}
                            data-plasmic-override={overrides._12}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty._12
                            )}
                          >
                            {"✅ "}
                          </div>
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame206"}
                      data-plasmic-override={overrides.frame206}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame206)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame207"}
                        data-plasmic-override={overrides.frame207}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame207)}
                      >
                        <div
                          data-plasmic-name={"sectionDescription13"}
                          data-plasmic-override={overrides.sectionDescription13}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.sectionDescription13
                          )}
                        >
                          {"Publish"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame208"}
                      data-plasmic-override={overrides.frame208}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame208)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame209"}
                        data-plasmic-override={overrides.frame209}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame209)}
                      >
                        <div
                          data-plasmic-name={"sectionDescription14"}
                          data-plasmic-override={overrides.sectionDescription14}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.sectionDescription14
                          )}
                        >
                          {
                            "Your UI Components, Methods & Algorithms to the LINCD repository"
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame151"}
                  data-plasmic-override={overrides.frame151}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame151)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : hasVariant(globalVariants, "screen", "tablet")
                      ? true
                      : true
                  ) ? (
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame153"}
                      data-plasmic-override={overrides.frame153}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame153)}
                    >
                      <div
                        data-plasmic-name={"rectangle78"}
                        data-plasmic-override={overrides.rectangle78}
                        className={classNames(projectcss.all, sty.rectangle78)}
                      />
                    </p.Stack>
                  ) : null}

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame149"}
                    data-plasmic-override={overrides.frame149}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame149)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zlxhf
                      )}
                    >
                      {"BUILT WITH"}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame147"}
                      data-plasmic-override={overrides.frame147}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame147)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"tag"}
                        data-plasmic-override={overrides.tag}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.tag)}
                      >
                        <div
                          data-plasmic-name={"largeTagBase"}
                          data-plasmic-override={overrides.largeTagBase}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.largeTagBase
                          )}
                        >
                          {"Typescript"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"tag2"}
                        data-plasmic-override={overrides.tag2}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.tag2)}
                      >
                        <div
                          data-plasmic-name={"largeTagBase2"}
                          data-plasmic-override={overrides.largeTagBase2}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.largeTagBase2
                          )}
                        >
                          {"React"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"tag3"}
                        data-plasmic-override={overrides.tag3}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.tag3)}
                      >
                        <div
                          data-plasmic-name={"largeTagBase3"}
                          data-plasmic-override={overrides.largeTagBase3}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.largeTagBase3
                          )}
                        >
                          {"ES6"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame152"}
                    data-plasmic-override={overrides.frame152}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame152)}
                  >
                    <div
                      data-plasmic-name={"rectangle80"}
                      data-plasmic-override={overrides.rectangle80}
                      className={classNames(projectcss.all, sty.rectangle80)}
                    />
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame154"}
                    data-plasmic-override={overrides.frame154}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame154)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__h5Am2
                      )}
                    >
                      {"QUERY LANGUAGES"}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame148"}
                      data-plasmic-override={overrides.frame148}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame148)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"tag4"}
                        data-plasmic-override={overrides.tag4}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.tag4)}
                      >
                        <div
                          data-plasmic-name={"largeTagBase4"}
                          data-plasmic-override={overrides.largeTagBase4}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.largeTagBase4
                          )}
                        >
                          {"GraphQL"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"tag5"}
                        data-plasmic-override={overrides.tag5}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.tag5)}
                      >
                        <div
                          data-plasmic-name={"largeTagBase5"}
                          data-plasmic-override={overrides.largeTagBase5}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.largeTagBase5
                          )}
                        >
                          {"SPARQL"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"tag6"}
                        data-plasmic-override={overrides.tag6}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.tag6)}
                      >
                        <div
                          data-plasmic-name={"largeTagBase6"}
                          data-plasmic-override={overrides.largeTagBase6}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.largeTagBase6
                          )}
                        >
                          {"MySQL"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame155"}
                    data-plasmic-override={overrides.frame155}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame155)}
                  >
                    <div
                      data-plasmic-name={"rectangle81"}
                      data-plasmic-override={overrides.rectangle81}
                      className={classNames(projectcss.all, sty.rectangle81)}
                    />
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame150"}
                    data-plasmic-override={overrides.frame150}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame150)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ycM4N
                      )}
                    >
                      {"Data ForMATS"}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame156"}
                      data-plasmic-override={overrides.frame156}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame156)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"tag7"}
                        data-plasmic-override={overrides.tag7}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.tag7)}
                      >
                        <div
                          data-plasmic-name={"largeTagBase7"}
                          data-plasmic-override={overrides.largeTagBase7}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.largeTagBase7
                          )}
                        >
                          {"JSON-LD"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"tag8"}
                        data-plasmic-override={overrides.tag8}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.tag8)}
                      >
                        <div
                          data-plasmic-name={"largeTagBase8"}
                          data-plasmic-override={overrides.largeTagBase8}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.largeTagBase8
                          )}
                        >
                          {"CSV"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"tag9"}
                        data-plasmic-override={overrides.tag9}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.tag9)}
                      >
                        <div
                          data-plasmic-name={"largeTagBase9"}
                          data-plasmic-override={overrides.largeTagBase9}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.largeTagBase9
                          )}
                        >
                          {"N-Quads"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>

                  {(
                    hasVariant(globalVariants, "screen", "tablet") ? true : true
                  ) ? (
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame157"}
                      data-plasmic-override={overrides.frame157}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame157)}
                    >
                      <div
                        data-plasmic-name={"rectangle82"}
                        data-plasmic-override={overrides.rectangle82}
                        className={classNames(projectcss.all, sty.rectangle82)}
                      />
                    </p.Stack>
                  ) : null}
                </p.Stack>

                <CtaButtonHomePage
                  className={classNames(
                    "__wab_instance",
                    sty.ctaButtonHomePage__dFyHj
                  )}
                />
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame210"}
              data-plasmic-override={overrides.frame210}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame210)}
            >
              <div
                data-plasmic-name={"sectionTitle3"}
                data-plasmic-override={overrides.sectionTitle3}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.sectionTitle3
                )}
              >
                {"A library that builds the new web"}
              </div>

              <div
                data-plasmic-name={"image50"}
                data-plasmic-override={overrides.image50}
                className={classNames(projectcss.all, sty.image50)}
              />
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame99"}
              data-plasmic-override={overrides.frame99}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame99)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame97"}
                data-plasmic-override={overrides.frame97}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame97)}
              >
                <div
                  data-plasmic-name={"sectionTitle4"}
                  data-plasmic-override={overrides.sectionTitle4}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.sectionTitle4
                  )}
                >
                  {"Reimagining what it means to collaborate"}
                </div>

                <div
                  data-plasmic-name={"sectionDescription15"}
                  data-plasmic-override={overrides.sectionDescription15}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.sectionDescription15
                  )}
                >
                  {
                    "Built on W3C Linked Data standards, LINCD not only enables seamless collaboration, but also ensures machine-readable data structures for ML and AI."
                  }
                </div>
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame128"}
              data-plasmic-override={overrides.frame128}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame128)}
            >
              <div
                data-plasmic-name={"image52"}
                data-plasmic-override={overrides.image52}
                className={classNames(projectcss.all, sty.image52)}
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame129"}
                data-plasmic-override={overrides.frame129}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame129)}
              >
                <div
                  data-plasmic-name={"sectionTitle5"}
                  data-plasmic-override={overrides.sectionTitle5}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.sectionTitle5
                  )}
                >
                  {"Learn more about web 3.0"}
                </div>

                <div
                  data-plasmic-name={"sectionDescription16"}
                  data-plasmic-override={overrides.sectionDescription16}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.sectionDescription16
                  )}
                >
                  {"Join our bi-monthly courses on new web3 technologies"}
                </div>

                <CtaButtonHomePage
                  className={classNames(
                    "__wab_instance",
                    sty.ctaButtonHomePage__hxKz4
                  )}
                />
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame125"}
              data-plasmic-override={overrides.frame125}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame125)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"featureInfo"}
                data-plasmic-override={overrides.featureInfo}
                hasGap={true}
                className={classNames(projectcss.all, sty.featureInfo)}
              >
                <div
                  data-plasmic-name={"sectionTitle6"}
                  data-plasmic-override={overrides.sectionTitle6}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.sectionTitle6
                  )}
                >
                  {"Engage with LINCD developers"}
                </div>

                <div
                  data-plasmic-name={"sectionDescription17"}
                  data-plasmic-override={overrides.sectionDescription17}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.sectionDescription17
                  )}
                >
                  {
                    "You can join our community of data scientists, knowledge experts, and developers who are dedicated to making the world of data and application building a better place."
                  }
                </div>
              </p.Stack>

              <div
                data-plasmic-name={"image22"}
                data-plasmic-override={overrides.image22}
                className={classNames(projectcss.all, sty.image22)}
              />
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame130"}
              data-plasmic-override={overrides.frame130}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame130)}
            >
              <div
                data-plasmic-name={"image51"}
                data-plasmic-override={overrides.image51}
                className={classNames(projectcss.all, sty.image51)}
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame131"}
                data-plasmic-override={overrides.frame131}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame131)}
              >
                <div
                  data-plasmic-name={"sectionTitle7"}
                  data-plasmic-override={overrides.sectionTitle7}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.sectionTitle7
                  )}
                >
                  {"Build & Earn"}
                </div>

                <div
                  data-plasmic-name={"sectionDescription18"}
                  data-plasmic-override={overrides.sectionDescription18}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.sectionDescription18
                  )}
                >
                  {
                    "We are looking for developers who demonstrate leadership, clean code, and creativity by engaging with the community. Get access to the bounty pool and solve complex real world problems. "
                  }
                </div>
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame132"}
              data-plasmic-override={overrides.frame132}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame132)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame145"}
                data-plasmic-override={overrides.frame145}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame145)}
              >
                <div
                  data-plasmic-name={"sectionTitle8"}
                  data-plasmic-override={overrides.sectionTitle8}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.sectionTitle8
                  )}
                >
                  {"Built by"}
                </div>

                <div
                  data-plasmic-name={"image34"}
                  data-plasmic-override={overrides.image34}
                  className={classNames(projectcss.all, sty.image34)}
                />

                <div
                  data-plasmic-name={"sectionTitle10"}
                  data-plasmic-override={overrides.sectionTitle10}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.sectionTitle10
                  )}
                >
                  {"Semantu"}
                </div>
              </p.Stack>

              <div
                data-plasmic-name={"sectionDescription19"}
                data-plasmic-override={overrides.sectionDescription19}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.sectionDescription19
                )}
              >
                <React.Fragment>
                  <React.Fragment>
                    {
                      "LINCD was built by Semantu as a way to increase interoperability on the internet.\nSemantu is creating a no-code web 3.0 app builder based on LINCD.\n\nFor demo's on what could be done with LINCD see\n"
                    }
                  </React.Fragment>
                  <a
                    data-plasmic-name={"link"}
                    data-plasmic-override={overrides.link}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      projectcss.plasmic_default__inline,
                      sty.link
                    )}
                    href={"https://www.semantu.com/demos" as const}
                  >
                    {"www.semantu.com/demos"}
                  </a>
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>
            </p.Stack>
          </p.Stack>
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "home",
    "frame141",
    "frame140",
    "frame96",
    "heading",
    "title",
    "description",
    "frame179",
    "frame138",
    "frame137",
    "sectionTitle",
    "sectionDescription",
    "screenShot20220131At2561",
    "frame127",
    "frame126",
    "frame169",
    "sectionTitle2",
    "rectangle79",
    "sectionDescription2",
    "group151",
    "frame178",
    "frame180",
    "frame166",
    "_",
    "_2",
    "frame177",
    "frame167",
    "sectionDescription3",
    "frame176",
    "frame173",
    "sectionDescription4",
    "frame181",
    "frame182",
    "frame168",
    "_3",
    "_4",
    "frame183",
    "frame170",
    "sectionDescription5",
    "frame184",
    "frame174",
    "sectionDescription6",
    "frame185",
    "frame186",
    "frame171",
    "_5",
    "_6",
    "frame187",
    "frame172",
    "sectionDescription7",
    "frame188",
    "frame175",
    "sectionDescription8",
    "frame189",
    "frame190",
    "frame191",
    "_7",
    "_8",
    "frame192",
    "frame193",
    "sectionDescription9",
    "frame194",
    "frame195",
    "sectionDescription10",
    "frame196",
    "frame197",
    "frame198",
    "_9",
    "_10",
    "frame199",
    "frame200",
    "sectionDescription11",
    "frame201",
    "frame202",
    "sectionDescription12",
    "frame203",
    "frame204",
    "frame205",
    "_11",
    "_12",
    "frame206",
    "frame207",
    "sectionDescription13",
    "frame208",
    "frame209",
    "sectionDescription14",
    "frame151",
    "frame153",
    "rectangle78",
    "frame149",
    "frame147",
    "tag",
    "largeTagBase",
    "tag2",
    "largeTagBase2",
    "tag3",
    "largeTagBase3",
    "frame152",
    "rectangle80",
    "frame154",
    "frame148",
    "tag4",
    "largeTagBase4",
    "tag5",
    "largeTagBase5",
    "tag6",
    "largeTagBase6",
    "frame155",
    "rectangle81",
    "frame150",
    "frame156",
    "tag7",
    "largeTagBase7",
    "tag8",
    "largeTagBase8",
    "tag9",
    "largeTagBase9",
    "frame157",
    "rectangle82",
    "frame210",
    "sectionTitle3",
    "image50",
    "frame99",
    "frame97",
    "sectionTitle4",
    "sectionDescription15",
    "frame128",
    "image52",
    "frame129",
    "sectionTitle5",
    "sectionDescription16",
    "frame125",
    "featureInfo",
    "sectionTitle6",
    "sectionDescription17",
    "image22",
    "frame130",
    "image51",
    "frame131",
    "sectionTitle7",
    "sectionDescription18",
    "frame132",
    "frame145",
    "sectionTitle8",
    "image34",
    "sectionTitle10",
    "sectionDescription19",
    "link"
  ],
  home: [
    "home",
    "frame141",
    "frame140",
    "frame96",
    "heading",
    "title",
    "description",
    "frame179",
    "frame138",
    "frame137",
    "sectionTitle",
    "sectionDescription",
    "screenShot20220131At2561",
    "frame127",
    "frame126",
    "frame169",
    "sectionTitle2",
    "rectangle79",
    "sectionDescription2",
    "group151",
    "frame178",
    "frame180",
    "frame166",
    "_",
    "_2",
    "frame177",
    "frame167",
    "sectionDescription3",
    "frame176",
    "frame173",
    "sectionDescription4",
    "frame181",
    "frame182",
    "frame168",
    "_3",
    "_4",
    "frame183",
    "frame170",
    "sectionDescription5",
    "frame184",
    "frame174",
    "sectionDescription6",
    "frame185",
    "frame186",
    "frame171",
    "_5",
    "_6",
    "frame187",
    "frame172",
    "sectionDescription7",
    "frame188",
    "frame175",
    "sectionDescription8",
    "frame189",
    "frame190",
    "frame191",
    "_7",
    "_8",
    "frame192",
    "frame193",
    "sectionDescription9",
    "frame194",
    "frame195",
    "sectionDescription10",
    "frame196",
    "frame197",
    "frame198",
    "_9",
    "_10",
    "frame199",
    "frame200",
    "sectionDescription11",
    "frame201",
    "frame202",
    "sectionDescription12",
    "frame203",
    "frame204",
    "frame205",
    "_11",
    "_12",
    "frame206",
    "frame207",
    "sectionDescription13",
    "frame208",
    "frame209",
    "sectionDescription14",
    "frame151",
    "frame153",
    "rectangle78",
    "frame149",
    "frame147",
    "tag",
    "largeTagBase",
    "tag2",
    "largeTagBase2",
    "tag3",
    "largeTagBase3",
    "frame152",
    "rectangle80",
    "frame154",
    "frame148",
    "tag4",
    "largeTagBase4",
    "tag5",
    "largeTagBase5",
    "tag6",
    "largeTagBase6",
    "frame155",
    "rectangle81",
    "frame150",
    "frame156",
    "tag7",
    "largeTagBase7",
    "tag8",
    "largeTagBase8",
    "tag9",
    "largeTagBase9",
    "frame157",
    "rectangle82",
    "frame210",
    "sectionTitle3",
    "image50",
    "frame99",
    "frame97",
    "sectionTitle4",
    "sectionDescription15",
    "frame128",
    "image52",
    "frame129",
    "sectionTitle5",
    "sectionDescription16",
    "frame125",
    "featureInfo",
    "sectionTitle6",
    "sectionDescription17",
    "image22",
    "frame130",
    "image51",
    "frame131",
    "sectionTitle7",
    "sectionDescription18",
    "frame132",
    "frame145",
    "sectionTitle8",
    "image34",
    "sectionTitle10",
    "sectionDescription19",
    "link"
  ],
  frame141: [
    "frame141",
    "frame140",
    "frame96",
    "heading",
    "title",
    "description",
    "frame179"
  ],
  frame140: ["frame140"],
  frame96: ["frame96", "heading", "title", "description", "frame179"],
  heading: ["heading", "title", "description"],
  title: ["title"],
  description: ["description"],
  frame179: ["frame179"],
  frame138: [
    "frame138",
    "frame137",
    "sectionTitle",
    "sectionDescription",
    "screenShot20220131At2561"
  ],
  frame137: ["frame137", "sectionTitle", "sectionDescription"],
  sectionTitle: ["sectionTitle"],
  sectionDescription: ["sectionDescription"],
  screenShot20220131At2561: ["screenShot20220131At2561"],
  frame127: [
    "frame127",
    "frame126",
    "frame169",
    "sectionTitle2",
    "rectangle79",
    "sectionDescription2",
    "group151",
    "frame178",
    "frame180",
    "frame166",
    "_",
    "_2",
    "frame177",
    "frame167",
    "sectionDescription3",
    "frame176",
    "frame173",
    "sectionDescription4",
    "frame181",
    "frame182",
    "frame168",
    "_3",
    "_4",
    "frame183",
    "frame170",
    "sectionDescription5",
    "frame184",
    "frame174",
    "sectionDescription6",
    "frame185",
    "frame186",
    "frame171",
    "_5",
    "_6",
    "frame187",
    "frame172",
    "sectionDescription7",
    "frame188",
    "frame175",
    "sectionDescription8",
    "frame189",
    "frame190",
    "frame191",
    "_7",
    "_8",
    "frame192",
    "frame193",
    "sectionDescription9",
    "frame194",
    "frame195",
    "sectionDescription10",
    "frame196",
    "frame197",
    "frame198",
    "_9",
    "_10",
    "frame199",
    "frame200",
    "sectionDescription11",
    "frame201",
    "frame202",
    "sectionDescription12",
    "frame203",
    "frame204",
    "frame205",
    "_11",
    "_12",
    "frame206",
    "frame207",
    "sectionDescription13",
    "frame208",
    "frame209",
    "sectionDescription14",
    "frame151",
    "frame153",
    "rectangle78",
    "frame149",
    "frame147",
    "tag",
    "largeTagBase",
    "tag2",
    "largeTagBase2",
    "tag3",
    "largeTagBase3",
    "frame152",
    "rectangle80",
    "frame154",
    "frame148",
    "tag4",
    "largeTagBase4",
    "tag5",
    "largeTagBase5",
    "tag6",
    "largeTagBase6",
    "frame155",
    "rectangle81",
    "frame150",
    "frame156",
    "tag7",
    "largeTagBase7",
    "tag8",
    "largeTagBase8",
    "tag9",
    "largeTagBase9",
    "frame157",
    "rectangle82"
  ],
  frame126: [
    "frame126",
    "frame169",
    "sectionTitle2",
    "rectangle79",
    "sectionDescription2",
    "group151",
    "frame178",
    "frame180",
    "frame166",
    "_",
    "_2",
    "frame177",
    "frame167",
    "sectionDescription3",
    "frame176",
    "frame173",
    "sectionDescription4",
    "frame181",
    "frame182",
    "frame168",
    "_3",
    "_4",
    "frame183",
    "frame170",
    "sectionDescription5",
    "frame184",
    "frame174",
    "sectionDescription6",
    "frame185",
    "frame186",
    "frame171",
    "_5",
    "_6",
    "frame187",
    "frame172",
    "sectionDescription7",
    "frame188",
    "frame175",
    "sectionDescription8",
    "frame189",
    "frame190",
    "frame191",
    "_7",
    "_8",
    "frame192",
    "frame193",
    "sectionDescription9",
    "frame194",
    "frame195",
    "sectionDescription10",
    "frame196",
    "frame197",
    "frame198",
    "_9",
    "_10",
    "frame199",
    "frame200",
    "sectionDescription11",
    "frame201",
    "frame202",
    "sectionDescription12",
    "frame203",
    "frame204",
    "frame205",
    "_11",
    "_12",
    "frame206",
    "frame207",
    "sectionDescription13",
    "frame208",
    "frame209",
    "sectionDescription14",
    "frame151",
    "frame153",
    "rectangle78",
    "frame149",
    "frame147",
    "tag",
    "largeTagBase",
    "tag2",
    "largeTagBase2",
    "tag3",
    "largeTagBase3",
    "frame152",
    "rectangle80",
    "frame154",
    "frame148",
    "tag4",
    "largeTagBase4",
    "tag5",
    "largeTagBase5",
    "tag6",
    "largeTagBase6",
    "frame155",
    "rectangle81",
    "frame150",
    "frame156",
    "tag7",
    "largeTagBase7",
    "tag8",
    "largeTagBase8",
    "tag9",
    "largeTagBase9",
    "frame157",
    "rectangle82"
  ],
  frame169: ["frame169", "sectionTitle2", "rectangle79", "sectionDescription2"],
  sectionTitle2: ["sectionTitle2"],
  rectangle79: ["rectangle79"],
  sectionDescription2: ["sectionDescription2"],
  group151: [
    "group151",
    "frame178",
    "frame180",
    "frame166",
    "_",
    "_2",
    "frame177",
    "frame167",
    "sectionDescription3",
    "frame176",
    "frame173",
    "sectionDescription4",
    "frame181",
    "frame182",
    "frame168",
    "_3",
    "_4",
    "frame183",
    "frame170",
    "sectionDescription5",
    "frame184",
    "frame174",
    "sectionDescription6",
    "frame185",
    "frame186",
    "frame171",
    "_5",
    "_6",
    "frame187",
    "frame172",
    "sectionDescription7",
    "frame188",
    "frame175",
    "sectionDescription8",
    "frame189",
    "frame190",
    "frame191",
    "_7",
    "_8",
    "frame192",
    "frame193",
    "sectionDescription9",
    "frame194",
    "frame195",
    "sectionDescription10",
    "frame196",
    "frame197",
    "frame198",
    "_9",
    "_10",
    "frame199",
    "frame200",
    "sectionDescription11",
    "frame201",
    "frame202",
    "sectionDescription12",
    "frame203",
    "frame204",
    "frame205",
    "_11",
    "_12",
    "frame206",
    "frame207",
    "sectionDescription13",
    "frame208",
    "frame209",
    "sectionDescription14"
  ],
  frame178: [
    "frame178",
    "frame180",
    "frame166",
    "_",
    "_2",
    "frame177",
    "frame167",
    "sectionDescription3",
    "frame176",
    "frame173",
    "sectionDescription4"
  ],
  frame180: ["frame180", "frame166", "_", "_2"],
  frame166: ["frame166", "_", "_2"],
  _: ["_", "_2"],
  _2: ["_2"],
  frame177: ["frame177", "frame167", "sectionDescription3"],
  frame167: ["frame167", "sectionDescription3"],
  sectionDescription3: ["sectionDescription3"],
  frame176: ["frame176", "frame173", "sectionDescription4"],
  frame173: ["frame173", "sectionDescription4"],
  sectionDescription4: ["sectionDescription4"],
  frame181: [
    "frame181",
    "frame182",
    "frame168",
    "_3",
    "_4",
    "frame183",
    "frame170",
    "sectionDescription5",
    "frame184",
    "frame174",
    "sectionDescription6"
  ],
  frame182: ["frame182", "frame168", "_3", "_4"],
  frame168: ["frame168", "_3", "_4"],
  _3: ["_3", "_4"],
  _4: ["_4"],
  frame183: ["frame183", "frame170", "sectionDescription5"],
  frame170: ["frame170", "sectionDescription5"],
  sectionDescription5: ["sectionDescription5"],
  frame184: ["frame184", "frame174", "sectionDescription6"],
  frame174: ["frame174", "sectionDescription6"],
  sectionDescription6: ["sectionDescription6"],
  frame185: [
    "frame185",
    "frame186",
    "frame171",
    "_5",
    "_6",
    "frame187",
    "frame172",
    "sectionDescription7",
    "frame188",
    "frame175",
    "sectionDescription8"
  ],
  frame186: ["frame186", "frame171", "_5", "_6"],
  frame171: ["frame171", "_5", "_6"],
  _5: ["_5", "_6"],
  _6: ["_6"],
  frame187: ["frame187", "frame172", "sectionDescription7"],
  frame172: ["frame172", "sectionDescription7"],
  sectionDescription7: ["sectionDescription7"],
  frame188: ["frame188", "frame175", "sectionDescription8"],
  frame175: ["frame175", "sectionDescription8"],
  sectionDescription8: ["sectionDescription8"],
  frame189: [
    "frame189",
    "frame190",
    "frame191",
    "_7",
    "_8",
    "frame192",
    "frame193",
    "sectionDescription9",
    "frame194",
    "frame195",
    "sectionDescription10"
  ],
  frame190: ["frame190", "frame191", "_7", "_8"],
  frame191: ["frame191", "_7", "_8"],
  _7: ["_7", "_8"],
  _8: ["_8"],
  frame192: ["frame192", "frame193", "sectionDescription9"],
  frame193: ["frame193", "sectionDescription9"],
  sectionDescription9: ["sectionDescription9"],
  frame194: ["frame194", "frame195", "sectionDescription10"],
  frame195: ["frame195", "sectionDescription10"],
  sectionDescription10: ["sectionDescription10"],
  frame196: [
    "frame196",
    "frame197",
    "frame198",
    "_9",
    "_10",
    "frame199",
    "frame200",
    "sectionDescription11",
    "frame201",
    "frame202",
    "sectionDescription12"
  ],
  frame197: ["frame197", "frame198", "_9", "_10"],
  frame198: ["frame198", "_9", "_10"],
  _9: ["_9", "_10"],
  _10: ["_10"],
  frame199: ["frame199", "frame200", "sectionDescription11"],
  frame200: ["frame200", "sectionDescription11"],
  sectionDescription11: ["sectionDescription11"],
  frame201: ["frame201", "frame202", "sectionDescription12"],
  frame202: ["frame202", "sectionDescription12"],
  sectionDescription12: ["sectionDescription12"],
  frame203: [
    "frame203",
    "frame204",
    "frame205",
    "_11",
    "_12",
    "frame206",
    "frame207",
    "sectionDescription13",
    "frame208",
    "frame209",
    "sectionDescription14"
  ],
  frame204: ["frame204", "frame205", "_11", "_12"],
  frame205: ["frame205", "_11", "_12"],
  _11: ["_11", "_12"],
  _12: ["_12"],
  frame206: ["frame206", "frame207", "sectionDescription13"],
  frame207: ["frame207", "sectionDescription13"],
  sectionDescription13: ["sectionDescription13"],
  frame208: ["frame208", "frame209", "sectionDescription14"],
  frame209: ["frame209", "sectionDescription14"],
  sectionDescription14: ["sectionDescription14"],
  frame151: [
    "frame151",
    "frame153",
    "rectangle78",
    "frame149",
    "frame147",
    "tag",
    "largeTagBase",
    "tag2",
    "largeTagBase2",
    "tag3",
    "largeTagBase3",
    "frame152",
    "rectangle80",
    "frame154",
    "frame148",
    "tag4",
    "largeTagBase4",
    "tag5",
    "largeTagBase5",
    "tag6",
    "largeTagBase6",
    "frame155",
    "rectangle81",
    "frame150",
    "frame156",
    "tag7",
    "largeTagBase7",
    "tag8",
    "largeTagBase8",
    "tag9",
    "largeTagBase9",
    "frame157",
    "rectangle82"
  ],
  frame153: ["frame153", "rectangle78"],
  rectangle78: ["rectangle78"],
  frame149: [
    "frame149",
    "frame147",
    "tag",
    "largeTagBase",
    "tag2",
    "largeTagBase2",
    "tag3",
    "largeTagBase3"
  ],
  frame147: [
    "frame147",
    "tag",
    "largeTagBase",
    "tag2",
    "largeTagBase2",
    "tag3",
    "largeTagBase3"
  ],
  tag: ["tag", "largeTagBase"],
  largeTagBase: ["largeTagBase"],
  tag2: ["tag2", "largeTagBase2"],
  largeTagBase2: ["largeTagBase2"],
  tag3: ["tag3", "largeTagBase3"],
  largeTagBase3: ["largeTagBase3"],
  frame152: ["frame152", "rectangle80"],
  rectangle80: ["rectangle80"],
  frame154: [
    "frame154",
    "frame148",
    "tag4",
    "largeTagBase4",
    "tag5",
    "largeTagBase5",
    "tag6",
    "largeTagBase6"
  ],
  frame148: [
    "frame148",
    "tag4",
    "largeTagBase4",
    "tag5",
    "largeTagBase5",
    "tag6",
    "largeTagBase6"
  ],
  tag4: ["tag4", "largeTagBase4"],
  largeTagBase4: ["largeTagBase4"],
  tag5: ["tag5", "largeTagBase5"],
  largeTagBase5: ["largeTagBase5"],
  tag6: ["tag6", "largeTagBase6"],
  largeTagBase6: ["largeTagBase6"],
  frame155: ["frame155", "rectangle81"],
  rectangle81: ["rectangle81"],
  frame150: [
    "frame150",
    "frame156",
    "tag7",
    "largeTagBase7",
    "tag8",
    "largeTagBase8",
    "tag9",
    "largeTagBase9"
  ],
  frame156: [
    "frame156",
    "tag7",
    "largeTagBase7",
    "tag8",
    "largeTagBase8",
    "tag9",
    "largeTagBase9"
  ],
  tag7: ["tag7", "largeTagBase7"],
  largeTagBase7: ["largeTagBase7"],
  tag8: ["tag8", "largeTagBase8"],
  largeTagBase8: ["largeTagBase8"],
  tag9: ["tag9", "largeTagBase9"],
  largeTagBase9: ["largeTagBase9"],
  frame157: ["frame157", "rectangle82"],
  rectangle82: ["rectangle82"],
  frame210: ["frame210", "sectionTitle3", "image50"],
  sectionTitle3: ["sectionTitle3"],
  image50: ["image50"],
  frame99: ["frame99", "frame97", "sectionTitle4", "sectionDescription15"],
  frame97: ["frame97", "sectionTitle4", "sectionDescription15"],
  sectionTitle4: ["sectionTitle4"],
  sectionDescription15: ["sectionDescription15"],
  frame128: [
    "frame128",
    "image52",
    "frame129",
    "sectionTitle5",
    "sectionDescription16"
  ],
  image52: ["image52"],
  frame129: ["frame129", "sectionTitle5", "sectionDescription16"],
  sectionTitle5: ["sectionTitle5"],
  sectionDescription16: ["sectionDescription16"],
  frame125: [
    "frame125",
    "featureInfo",
    "sectionTitle6",
    "sectionDescription17",
    "image22"
  ],
  featureInfo: ["featureInfo", "sectionTitle6", "sectionDescription17"],
  sectionTitle6: ["sectionTitle6"],
  sectionDescription17: ["sectionDescription17"],
  image22: ["image22"],
  frame130: [
    "frame130",
    "image51",
    "frame131",
    "sectionTitle7",
    "sectionDescription18"
  ],
  image51: ["image51"],
  frame131: ["frame131", "sectionTitle7", "sectionDescription18"],
  sectionTitle7: ["sectionTitle7"],
  sectionDescription18: ["sectionDescription18"],
  frame132: [
    "frame132",
    "frame145",
    "sectionTitle8",
    "image34",
    "sectionTitle10",
    "sectionDescription19",
    "link"
  ],
  frame145: ["frame145", "sectionTitle8", "image34", "sectionTitle10"],
  sectionTitle8: ["sectionTitle8"],
  image34: ["image34"],
  sectionTitle10: ["sectionTitle10"],
  sectionDescription19: ["sectionDescription19", "link"],
  link: ["link"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  home: "div";
  frame141: "div";
  frame140: "div";
  frame96: "div";
  heading: "div";
  title: "div";
  description: "div";
  frame179: "div";
  frame138: "div";
  frame137: "div";
  sectionTitle: "div";
  sectionDescription: "div";
  screenShot20220131At2561: "div";
  frame127: "div";
  frame126: "div";
  frame169: "div";
  sectionTitle2: "div";
  rectangle79: "div";
  sectionDescription2: "div";
  group151: "div";
  frame178: "div";
  frame180: "div";
  frame166: "div";
  _: "div";
  _2: "div";
  frame177: "div";
  frame167: "div";
  sectionDescription3: "div";
  frame176: "div";
  frame173: "div";
  sectionDescription4: "div";
  frame181: "div";
  frame182: "div";
  frame168: "div";
  _3: "div";
  _4: "div";
  frame183: "div";
  frame170: "div";
  sectionDescription5: "div";
  frame184: "div";
  frame174: "div";
  sectionDescription6: "div";
  frame185: "div";
  frame186: "div";
  frame171: "div";
  _5: "div";
  _6: "div";
  frame187: "div";
  frame172: "div";
  sectionDescription7: "div";
  frame188: "div";
  frame175: "div";
  sectionDescription8: "div";
  frame189: "div";
  frame190: "div";
  frame191: "div";
  _7: "div";
  _8: "div";
  frame192: "div";
  frame193: "div";
  sectionDescription9: "div";
  frame194: "div";
  frame195: "div";
  sectionDescription10: "div";
  frame196: "div";
  frame197: "div";
  frame198: "div";
  _9: "div";
  _10: "div";
  frame199: "div";
  frame200: "div";
  sectionDescription11: "div";
  frame201: "div";
  frame202: "div";
  sectionDescription12: "div";
  frame203: "div";
  frame204: "div";
  frame205: "div";
  _11: "div";
  _12: "div";
  frame206: "div";
  frame207: "div";
  sectionDescription13: "div";
  frame208: "div";
  frame209: "div";
  sectionDescription14: "div";
  frame151: "div";
  frame153: "div";
  rectangle78: "div";
  frame149: "div";
  frame147: "div";
  tag: "div";
  largeTagBase: "div";
  tag2: "div";
  largeTagBase2: "div";
  tag3: "div";
  largeTagBase3: "div";
  frame152: "div";
  rectangle80: "div";
  frame154: "div";
  frame148: "div";
  tag4: "div";
  largeTagBase4: "div";
  tag5: "div";
  largeTagBase5: "div";
  tag6: "div";
  largeTagBase6: "div";
  frame155: "div";
  rectangle81: "div";
  frame150: "div";
  frame156: "div";
  tag7: "div";
  largeTagBase7: "div";
  tag8: "div";
  largeTagBase8: "div";
  tag9: "div";
  largeTagBase9: "div";
  frame157: "div";
  rectangle82: "div";
  frame210: "div";
  sectionTitle3: "div";
  image50: "div";
  frame99: "div";
  frame97: "div";
  sectionTitle4: "div";
  sectionDescription15: "div";
  frame128: "div";
  image52: "div";
  frame129: "div";
  sectionTitle5: "div";
  sectionDescription16: "div";
  frame125: "div";
  featureInfo: "div";
  sectionTitle6: "div";
  sectionDescription17: "div";
  image22: "div";
  frame130: "div";
  image51: "div";
  frame131: "div";
  sectionTitle7: "div";
  sectionDescription18: "div";
  frame132: "div";
  frame145: "div";
  sectionTitle8: "div";
  image34: "div";
  sectionTitle10: "div";
  sectionDescription19: "div";
  link: "a";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    home: makeNodeComponent("home"),
    frame141: makeNodeComponent("frame141"),
    frame140: makeNodeComponent("frame140"),
    frame96: makeNodeComponent("frame96"),
    heading: makeNodeComponent("heading"),
    title: makeNodeComponent("title"),
    description: makeNodeComponent("description"),
    frame179: makeNodeComponent("frame179"),
    frame138: makeNodeComponent("frame138"),
    frame137: makeNodeComponent("frame137"),
    sectionTitle: makeNodeComponent("sectionTitle"),
    sectionDescription: makeNodeComponent("sectionDescription"),
    screenShot20220131At2561: makeNodeComponent("screenShot20220131At2561"),
    frame127: makeNodeComponent("frame127"),
    frame126: makeNodeComponent("frame126"),
    frame169: makeNodeComponent("frame169"),
    sectionTitle2: makeNodeComponent("sectionTitle2"),
    rectangle79: makeNodeComponent("rectangle79"),
    sectionDescription2: makeNodeComponent("sectionDescription2"),
    group151: makeNodeComponent("group151"),
    frame178: makeNodeComponent("frame178"),
    frame180: makeNodeComponent("frame180"),
    frame166: makeNodeComponent("frame166"),
    _: makeNodeComponent("_"),
    _2: makeNodeComponent("_2"),
    frame177: makeNodeComponent("frame177"),
    frame167: makeNodeComponent("frame167"),
    sectionDescription3: makeNodeComponent("sectionDescription3"),
    frame176: makeNodeComponent("frame176"),
    frame173: makeNodeComponent("frame173"),
    sectionDescription4: makeNodeComponent("sectionDescription4"),
    frame181: makeNodeComponent("frame181"),
    frame182: makeNodeComponent("frame182"),
    frame168: makeNodeComponent("frame168"),
    _3: makeNodeComponent("_3"),
    _4: makeNodeComponent("_4"),
    frame183: makeNodeComponent("frame183"),
    frame170: makeNodeComponent("frame170"),
    sectionDescription5: makeNodeComponent("sectionDescription5"),
    frame184: makeNodeComponent("frame184"),
    frame174: makeNodeComponent("frame174"),
    sectionDescription6: makeNodeComponent("sectionDescription6"),
    frame185: makeNodeComponent("frame185"),
    frame186: makeNodeComponent("frame186"),
    frame171: makeNodeComponent("frame171"),
    _5: makeNodeComponent("_5"),
    _6: makeNodeComponent("_6"),
    frame187: makeNodeComponent("frame187"),
    frame172: makeNodeComponent("frame172"),
    sectionDescription7: makeNodeComponent("sectionDescription7"),
    frame188: makeNodeComponent("frame188"),
    frame175: makeNodeComponent("frame175"),
    sectionDescription8: makeNodeComponent("sectionDescription8"),
    frame189: makeNodeComponent("frame189"),
    frame190: makeNodeComponent("frame190"),
    frame191: makeNodeComponent("frame191"),
    _7: makeNodeComponent("_7"),
    _8: makeNodeComponent("_8"),
    frame192: makeNodeComponent("frame192"),
    frame193: makeNodeComponent("frame193"),
    sectionDescription9: makeNodeComponent("sectionDescription9"),
    frame194: makeNodeComponent("frame194"),
    frame195: makeNodeComponent("frame195"),
    sectionDescription10: makeNodeComponent("sectionDescription10"),
    frame196: makeNodeComponent("frame196"),
    frame197: makeNodeComponent("frame197"),
    frame198: makeNodeComponent("frame198"),
    _9: makeNodeComponent("_9"),
    _10: makeNodeComponent("_10"),
    frame199: makeNodeComponent("frame199"),
    frame200: makeNodeComponent("frame200"),
    sectionDescription11: makeNodeComponent("sectionDescription11"),
    frame201: makeNodeComponent("frame201"),
    frame202: makeNodeComponent("frame202"),
    sectionDescription12: makeNodeComponent("sectionDescription12"),
    frame203: makeNodeComponent("frame203"),
    frame204: makeNodeComponent("frame204"),
    frame205: makeNodeComponent("frame205"),
    _11: makeNodeComponent("_11"),
    _12: makeNodeComponent("_12"),
    frame206: makeNodeComponent("frame206"),
    frame207: makeNodeComponent("frame207"),
    sectionDescription13: makeNodeComponent("sectionDescription13"),
    frame208: makeNodeComponent("frame208"),
    frame209: makeNodeComponent("frame209"),
    sectionDescription14: makeNodeComponent("sectionDescription14"),
    frame151: makeNodeComponent("frame151"),
    frame153: makeNodeComponent("frame153"),
    rectangle78: makeNodeComponent("rectangle78"),
    frame149: makeNodeComponent("frame149"),
    frame147: makeNodeComponent("frame147"),
    tag: makeNodeComponent("tag"),
    largeTagBase: makeNodeComponent("largeTagBase"),
    tag2: makeNodeComponent("tag2"),
    largeTagBase2: makeNodeComponent("largeTagBase2"),
    tag3: makeNodeComponent("tag3"),
    largeTagBase3: makeNodeComponent("largeTagBase3"),
    frame152: makeNodeComponent("frame152"),
    rectangle80: makeNodeComponent("rectangle80"),
    frame154: makeNodeComponent("frame154"),
    frame148: makeNodeComponent("frame148"),
    tag4: makeNodeComponent("tag4"),
    largeTagBase4: makeNodeComponent("largeTagBase4"),
    tag5: makeNodeComponent("tag5"),
    largeTagBase5: makeNodeComponent("largeTagBase5"),
    tag6: makeNodeComponent("tag6"),
    largeTagBase6: makeNodeComponent("largeTagBase6"),
    frame155: makeNodeComponent("frame155"),
    rectangle81: makeNodeComponent("rectangle81"),
    frame150: makeNodeComponent("frame150"),
    frame156: makeNodeComponent("frame156"),
    tag7: makeNodeComponent("tag7"),
    largeTagBase7: makeNodeComponent("largeTagBase7"),
    tag8: makeNodeComponent("tag8"),
    largeTagBase8: makeNodeComponent("largeTagBase8"),
    tag9: makeNodeComponent("tag9"),
    largeTagBase9: makeNodeComponent("largeTagBase9"),
    frame157: makeNodeComponent("frame157"),
    rectangle82: makeNodeComponent("rectangle82"),
    frame210: makeNodeComponent("frame210"),
    sectionTitle3: makeNodeComponent("sectionTitle3"),
    image50: makeNodeComponent("image50"),
    frame99: makeNodeComponent("frame99"),
    frame97: makeNodeComponent("frame97"),
    sectionTitle4: makeNodeComponent("sectionTitle4"),
    sectionDescription15: makeNodeComponent("sectionDescription15"),
    frame128: makeNodeComponent("frame128"),
    image52: makeNodeComponent("image52"),
    frame129: makeNodeComponent("frame129"),
    sectionTitle5: makeNodeComponent("sectionTitle5"),
    sectionDescription16: makeNodeComponent("sectionDescription16"),
    frame125: makeNodeComponent("frame125"),
    featureInfo: makeNodeComponent("featureInfo"),
    sectionTitle6: makeNodeComponent("sectionTitle6"),
    sectionDescription17: makeNodeComponent("sectionDescription17"),
    image22: makeNodeComponent("image22"),
    frame130: makeNodeComponent("frame130"),
    image51: makeNodeComponent("image51"),
    frame131: makeNodeComponent("frame131"),
    sectionTitle7: makeNodeComponent("sectionTitle7"),
    sectionDescription18: makeNodeComponent("sectionDescription18"),
    frame132: makeNodeComponent("frame132"),
    frame145: makeNodeComponent("frame145"),
    sectionTitle8: makeNodeComponent("sectionTitle8"),
    image34: makeNodeComponent("image34"),
    sectionTitle10: makeNodeComponent("sectionTitle10"),
    sectionDescription19: makeNodeComponent("sectionDescription19"),
    link: makeNodeComponent("link"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
